Map.addLayer(ee.Image().paint(roi, 1,3), null, 'roi');
var start = '2013-01-01';
var stop = '2020-01-01';
//收集数据，选好波段
  var bands = ['EVI'];
  var l8 = ee.ImageCollection('LANDSAT/LC08/C01/T1_8DAY_EVI').filterDate(start, stop).select(['EVI'], bands);
  var l5 = ee.ImageCollection('LANDSAT/LT05/C01/T1_8DAY_EVI').filterDate(start, stop).select(['EVI'], bands);
 

  var images = l8.merge(l5);
var filteredLandsat = images
    .filterBounds(roi)
    .filterDate('2013-01-01', '2020-01-01');
//  看看数据覆盖规模  
print("filteredLandsat", filteredLandsat);

//内嵌参数设置
var changeParams = {
    collection: filteredLandsat,
    breakpointBands: ["EVI"],
    minObservations: 6,
    chiSquareProbability: 0.99,
    minNumOfYearsScaler: 1.33,
    dateFormat: 1,
    lambda: 0.002,
    maxIterations: 25000
  };
print(changeParams);
////开始用别人家的CCDC算法运算
var results = ee.Algorithms.TemporalSegmentation.Ccdc(changeParams);
//
print("results", results);
//一串三维数据需要序列扩展合成为多波段栅格图层 用arrayFlatten
var CCDC =results.clip(roi)
                 .select('tBreak')
                 .reproject('EPSG:4326', null, 30)
                 .arraySlice(0, 0, 1)
                 .arrayFlatten([["CCDC"]]);
                 
print(CCDC, 'CCDC');
//可视化
var Vis = {
  min: 2014,
  max: 2020,
  palette: [
    'FFFFFF', 'CE7E45', 'DF923D', 'F1B555', 'FCD163', '99B718', '74A901',
    '66A000', '529400', '3E8601', '207401', '056201', '004C00', '023B01',
    '012E01', '011D01', '011301'
  ],
};
Map.addLayer(CCDC,Vis, 'CCDC');
//输出结果
Export.image.toDrive({
  image:CCDC,
  region:roi,
  description: "CCDC",
  scale:30,
  fileNamePrefix:'dawa', 
  maxPixels:1e13,
});